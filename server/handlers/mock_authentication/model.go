// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dnp1/conversa/server/handlers/authentication (interfaces: Model)

package mock_authentication

import (
	session "github.com/dnp1/conversa/server/data/session"
	errors "github.com/dnp1/conversa/server/errors"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Model interface
type MockModel struct {
	ctrl     *gomock.Controller
	recorder *_MockModelRecorder
}

// Recorder for MockModel (not exported)
type _MockModelRecorder struct {
	mock *MockModel
}

func NewMockModel(ctrl *gomock.Controller) *MockModel {
	mock := &MockModel{ctrl: ctrl}
	mock.recorder = &_MockModelRecorder{mock}
	return mock
}

func (_m *MockModel) EXPECT() *_MockModelRecorder {
	return _m.recorder
}

func (_m *MockModel) Retrieve(_param0 string) (*session.Data, errors.Error) {
	ret := _m.ctrl.Call(_m, "Retrieve", _param0)
	ret0, _ := ret[0].(*session.Data)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

func (_mr *_MockModelRecorder) Retrieve(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Retrieve", arg0)
}

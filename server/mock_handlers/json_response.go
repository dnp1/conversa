// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dnp1/conversa/server/handlers (interfaces: JsonResponse)

package mock_handlers

import (
	errors "github.com/dnp1/conversa/server/errors"
	gomock "github.com/golang/mock/gomock"
	gin_v1 "gopkg.in/gin-gonic/gin.v1"
)

// Mock of JsonResponse interface
type MockJsonResponse struct {
	ctrl     *gomock.Controller
	recorder *_MockJsonResponseRecorder
}

// Recorder for MockJsonResponse (not exported)
type _MockJsonResponseRecorder struct {
	mock *MockJsonResponse
}

func NewMockJsonResponse(ctrl *gomock.Controller) *MockJsonResponse {
	mock := &MockJsonResponse{ctrl: ctrl}
	mock.recorder = &_MockJsonResponseRecorder{mock}
	return mock
}

func (_m *MockJsonResponse) EXPECT() *_MockJsonResponseRecorder {
	return _m.recorder
}

func (_m *MockJsonResponse) SetData(_param0 interface{}) {
	_m.ctrl.Call(_m, "SetData", _param0)
}

func (_mr *_MockJsonResponseRecorder) SetData(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetData", arg0)
}

func (_m *MockJsonResponse) SetError(_param0 errors.Error) {
	_m.ctrl.Call(_m, "SetError", _param0)
}

func (_mr *_MockJsonResponseRecorder) SetError(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetError", arg0)
}

func (_m *MockJsonResponse) SetMessage(_param0 string) {
	_m.ctrl.Call(_m, "SetMessage", _param0)
}

func (_mr *_MockJsonResponseRecorder) SetMessage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetMessage", arg0)
}

func (_m *MockJsonResponse) SetStatus(_param0 int) {
	_m.ctrl.Call(_m, "SetStatus", _param0)
}

func (_mr *_MockJsonResponseRecorder) SetStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetStatus", arg0)
}

func (_m *MockJsonResponse) WriteJSON(_param0 *gin_v1.Context) {
	_m.ctrl.Call(_m, "WriteJSON", _param0)
}

func (_mr *_MockJsonResponseRecorder) WriteJSON(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteJSON", arg0)
}

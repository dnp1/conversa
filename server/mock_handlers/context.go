// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dnp1/conversa/server/handlers (interfaces: Context)

package mock_handlers

import (
	errors "github.com/dnp1/conversa/server/errors"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
)

// Mock of Context interface
type MockContext struct {
	ctrl     *gomock.Controller
	recorder *_MockContextRecorder
}

// Recorder for MockContext (not exported)
type _MockContextRecorder struct {
	mock *MockContext
}

func NewMockContext(ctrl *gomock.Controller) *MockContext {
	mock := &MockContext{ctrl: ctrl}
	mock.recorder = &_MockContextRecorder{mock}
	return mock
}

func (_m *MockContext) EXPECT() *_MockContextRecorder {
	return _m.recorder
}

func (_m *MockContext) Abort() {
	_m.ctrl.Call(_m, "Abort")
}

func (_mr *_MockContextRecorder) Abort() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Abort")
}

func (_m *MockContext) BindJSON(_param0 interface{}) errors.Error {
	ret := _m.ctrl.Call(_m, "BindJSON", _param0)
	ret0, _ := ret[0].(errors.Error)
	return ret0
}

func (_mr *_MockContextRecorder) BindJSON(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "BindJSON", arg0)
}

func (_m *MockContext) Cookie(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "Cookie", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockContextRecorder) Cookie(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Cookie", arg0)
}

func (_m *MockContext) DeleteCookie(_param0 string) {
	_m.ctrl.Call(_m, "DeleteCookie", _param0)
}

func (_mr *_MockContextRecorder) DeleteCookie(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteCookie", arg0)
}

func (_m *MockContext) GetQuery(_param0 string) (string, bool) {
	ret := _m.ctrl.Call(_m, "GetQuery", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

func (_mr *_MockContextRecorder) GetQuery(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetQuery", arg0)
}

func (_m *MockContext) GetString(_param0 string) (string, bool) {
	ret := _m.ctrl.Call(_m, "GetString", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

func (_mr *_MockContextRecorder) GetString(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetString", arg0)
}

func (_m *MockContext) Next() {
	_m.ctrl.Call(_m, "Next")
}

func (_mr *_MockContextRecorder) Next() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Next")
}

func (_m *MockContext) Param(_param0 string) string {
	ret := _m.ctrl.Call(_m, "Param", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockContextRecorder) Param(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Param", arg0)
}

func (_m *MockContext) Set(_param0 string, _param1 interface{}) {
	_m.ctrl.Call(_m, "Set", _param0, _param1)
}

func (_mr *_MockContextRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Set", arg0, arg1)
}

func (_m *MockContext) SetCookie(_param0 *http.Cookie) {
	_m.ctrl.Call(_m, "SetCookie", _param0)
}

func (_mr *_MockContextRecorder) SetCookie(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetCookie", arg0)
}

func (_m *MockContext) ShouldGetString(_param0 string) (string, errors.Error) {
	ret := _m.ctrl.Call(_m, "ShouldGetString", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

func (_mr *_MockContextRecorder) ShouldGetString(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ShouldGetString", arg0)
}
